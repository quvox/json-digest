version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build-python:
          filters:
            tags:
              only: /^py-v.*/
            branches:
              ignore: /.*/
      - test-python:
          requires:
            - build-python
          filters:
            tags:
              only: /^py-v.*/
            branches:
              ignore: /.*/
      - deploy-python:
          requires:
            - test-python
          filters:
            tags:
              only: /^py-v.*/
            branches:
              ignore: /.*/
      - build-js:
          filters:
            tags:
              only: /^js-v.*/
            branches:
              ignore: /.*/
      - test-js:
          requires:
            - build-js
          filters:
            tags:
              only: /^js-v.*/
            branches:
              ignore: /.*/
      - deploy-js:
          requires:
            - test-js
          filters:
            tags:
              only: /^js-v.*/
            branches:
              ignore: /.*/
jobs:
  build-python:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "python/setup.py" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pytest
            pip install -r python/scripts/requirements-pypi.txt
      - save_cache:
          key: v1-dependency-cache-{{ checksum "python/setup.py" }}
          paths:
            - "venv"
  test-python:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "python/setup.py" }}
      - run:
          name: Perform test
          command: |
            . venv/bin/activate
            cd python/tests
            pytest test_jsondigest.py
      - run:
          name: Test command line tool
          command: |
            . venv/bin/activate
            cd python/tests
            bash test_cmd.sh
      - save_cache:
          key: v1-dependency-cache-{{ checksum "python/setup.py" }}
          paths:
            - "venv"
  deploy-python:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "python/setup.py" }}
      - run:
          name: verify version
          command: |
            . venv/bin/activate
            cd python/
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: deploy in PyPI
          command: |
            . venv/bin/activate
            cd python/scripts
            bash pypi-upload.sh upload
      - save_cache:
          key: v1-dependency-cache-{{ checksum "python/setup.py" }}
          paths:
            - "venv"
  build-js:
    docker:
      - image: circleci/node:10.16.2-browsers
    steps:
      - checkout
      - restore_cache:
          key: yarn-packages-{{ checksum "javascript/yarn.lock" }}
      - run:
          name: install node_modules
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash
            cd javascript
            yarn install
      - save_cache:
          key: yarn-packages-{{ checksum "javascript/yarn.lock" }}
          paths:
            - "javascript/node_modules"
            - "~/.yarn"
            - "~/.config"
  test-js:
    docker:
      - image: circleci/node:10.16.2-browsers
    steps:
      - checkout
      - restore_cache:
          key: yarn-packages-{{ checksum "javascript/yarn.lock" }}
      - run:
          name: Perform test
          command: |
            export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
            cd javascript
            yarn build
            yarn test
            yarn test:bundle
            yarn karma
            yarn karma:window
            yarn karma:bundle
      - save_cache:
          key: yarn-packages-{{ checksum "javascript/yarn.lock" }}
          paths:
            - "javascript/node_modules"
            - "~/.yarn"
            - "~/.config"
  deploy-js:
    docker:
      - image: circleci/node:10.16.2-browsers
    steps:
      - checkout
      - restore_cache:
          key: yarn-packages-{{ checksum "javascript/yarn.lock" }}
      - run:
          name: deploy package
          command: |
            sudo apt -y install jq
            export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
            cd javascript
            export NPMVER=`cat package.json | jq -r ."version"`
            if [[ "js-v${NPMVER}" != ${CIRCLE_TAG} ]]; then
              exit 1
            fi
            yarn build
            echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > ~/.npmrc
            npm publish
      - save_cache:
          key: yarn-packages-{{ checksum "javascript/yarn.lock" }}
          paths:
            - "javascript/node_modules"
            - "~/.yarn"
            - "~/.config"
